{{ if eq .Values.clusterSizing.deployIgnite true }}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: ignite
  namespace: ignite
spec:
  selector:
    matchLabels:
      app: ignite
  serviceName: ignite
  replicas: {{ .Values.clusterSizing.igniteReplicas }}
  template:
    metadata:
      labels:
        app: ignite
    spec:
      serviceAccountName: ignite
      volumes:
        - name: config-volume
          configMap:
            name: ignite-config      
      containers:
      - name: ignite
        image: apacheignite/ignite:2.7.6
        env:
        - name: OPTION_LIBS
          value: ignite-kubernetes,ignite-rest-http
        - name: CONFIG_URI
          value: /config/ignite-config-kube-persistence.xml
        - name: IGNITE_QUIET
          value: "false"
        - name: JVM_OPTS
          value: "-Djava.net.preferIPv4Stack=true"
        ports:
        - containerPort: 11211 # JDBC port number.
        - containerPort: 47100 # communication SPI port number.
        - containerPort: 47500 # discovery SPI port number.
        - containerPort: 49112 # JMX port number.
        - containerPort: 10800 # SQL port number.
        - containerPort: 8080 # REST port number.
        - containerPort: 10900 #Thin clients port number.
        volumeMounts:
        - name: config-volume
          mountPath: /config/ignite-config-kube-persistence.xml
          subPath: ignite-config-kube-persistence.xml   
        - mountPath: "/wal"
          name: ignite-wal
        - mountPath: "/persistence"
          name: ignite-persistence
  volumeClaimTemplates:
  - metadata:
      name: ignite-persistence
    spec:
      accessModes: [ "ReadWriteOnce" ]
      storageClassName: {{ .Values.storage.defaultStorageClass }}
      resources:
        requests:
          storage: "1Gi"
  - metadata:
      name: ignite-wal
    spec:
      accessModes: [ "ReadWriteOnce" ]
      storageClassName: {{ .Values.storage.defaultStorageClass }}
      resources:
        requests:
          storage: "1Gi"
{{ end }}